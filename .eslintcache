[{"D:\\React Js\\memories project\\client\\src\\index.js":"1","D:\\React Js\\memories project\\client\\src\\App.js":"2","D:\\React Js\\library management system\\client\\src\\index.js":"3","D:\\React Js\\library management system\\client\\src\\Routes.js":"4","D:\\React Js\\library management system\\client\\src\\core\\Home.js":"5","D:\\React Js\\library management system\\client\\src\\core\\Layout.js":"6","D:\\React Js\\library management system\\client\\src\\core\\Card.js":"7","D:\\React Js\\library management system\\client\\src\\core\\apiCore.js":"8","D:\\React Js\\library management system\\client\\src\\core\\Search.js":"9","D:\\React Js\\library management system\\client\\src\\Config.js":"10","D:\\React Js\\library management system\\client\\src\\core\\Menu.js":"11","D:\\React Js\\library management system\\client\\src\\core\\ShowImage.js":"12","D:\\React Js\\library management system\\client\\src\\auth\\index.js":"13","D:\\React Js\\library management system\\client\\src\\user\\Signup.js":"14","D:\\React Js\\library management system\\client\\src\\user\\Signin.js":"15","D:\\React Js\\library management system\\client\\src\\auth\\PrivateRoute.js":"16","D:\\React Js\\library management system\\client\\src\\auth\\AdminRoute.js":"17","D:\\React Js\\library management system\\client\\src\\user\\UserDashboard.js":"18","D:\\React Js\\library management system\\client\\src\\user\\Profile.js":"19","D:\\React Js\\library management system\\client\\src\\user\\AdminDashboard.js":"20","D:\\React Js\\library management system\\client\\src\\admin\\AddCategory.js":"21","D:\\React Js\\library management system\\client\\src\\user\\apiUser.js":"22","D:\\React Js\\library management system\\client\\src\\admin\\apiAdmin.js":"23","D:\\React Js\\library management system\\client\\src\\admin\\AddBook.js":"24","D:\\React Js\\library management system\\client\\src\\admin\\UpdateBook.js":"25","D:\\React Js\\library management system\\client\\src\\admin\\ManageBooks.js":"26","D:\\React Js\\library management system\\client\\src\\core\\Book.js":"27","D:\\React Js\\library management system\\client\\src\\core\\searchByAuthor.js":"28","D:\\React Js\\library management system\\client\\src\\core\\searchByPublisher.js":"29","D:\\React Js\\library management system\\client\\src\\admin\\Inventory.js":"30"},{"size":151,"mtime":1612361551205,"results":"31","hashOfConfig":"32"},{"size":154,"mtime":1612361656727,"results":"33","hashOfConfig":"32"},{"size":223,"mtime":1612458559299,"results":"34","hashOfConfig":"35"},{"size":1765,"mtime":1612638591019,"results":"36","hashOfConfig":"35"},{"size":1320,"mtime":1612639650730,"results":"37","hashOfConfig":"35"},{"size":457,"mtime":1612508051295,"results":"38","hashOfConfig":"35"},{"size":5481,"mtime":1612640057339,"results":"39","hashOfConfig":"35"},{"size":3342,"mtime":1612637840424,"results":"40","hashOfConfig":"35"},{"size":3481,"mtime":1612601910333,"results":"41","hashOfConfig":"35"},{"size":49,"mtime":1612463098921,"results":"42","hashOfConfig":"35"},{"size":2054,"mtime":1612638322816,"results":"43","hashOfConfig":"35"},{"size":348,"mtime":1612508519928,"results":"44","hashOfConfig":"35"},{"size":1596,"mtime":1612464781312,"results":"45","hashOfConfig":"35"},{"size":2796,"mtime":1612638516774,"results":"46","hashOfConfig":"35"},{"size":2946,"mtime":1612638520675,"results":"47","hashOfConfig":"35"},{"size":582,"mtime":1612464840431,"results":"48","hashOfConfig":"35"},{"size":626,"mtime":1612462956082,"results":"49","hashOfConfig":"35"},{"size":2990,"mtime":1612630168889,"results":"50","hashOfConfig":"35"},{"size":3254,"mtime":1612623756997,"results":"51","hashOfConfig":"35"},{"size":2243,"mtime":1612638439637,"results":"52","hashOfConfig":"35"},{"size":2717,"mtime":1612493344587,"results":"53","hashOfConfig":"35"},{"size":1648,"mtime":1612628924573,"results":"54","hashOfConfig":"35"},{"size":3659,"mtime":1612637356970,"results":"55","hashOfConfig":"35"},{"size":5075,"mtime":1612637306096,"results":"56","hashOfConfig":"35"},{"size":6358,"mtime":1612637508934,"results":"57","hashOfConfig":"35"},{"size":2162,"mtime":1612635725219,"results":"58","hashOfConfig":"35"},{"size":1943,"mtime":1612510532561,"results":"59","hashOfConfig":"35"},{"size":2619,"mtime":1612638376954,"results":"60","hashOfConfig":"35"},{"size":2632,"mtime":1612638400220,"results":"61","hashOfConfig":"35"},{"size":4356,"mtime":1612637448039,"results":"62","hashOfConfig":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m0aga7",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"5nju0d",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"69"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"69"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"69"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"69"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"69"},"D:\\React Js\\memories project\\client\\src\\index.js",[],"D:\\React Js\\memories project\\client\\src\\App.js",[],"D:\\React Js\\library management system\\client\\src\\index.js",[],["138","139"],"D:\\React Js\\library management system\\client\\src\\Routes.js",[],"D:\\React Js\\library management system\\client\\src\\core\\Home.js",["140"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport { getBooks } from './apiCore'; // function\r\nimport  Card  from './Card'; // component function, so dont't use curly braces here\r\nimport Search from './Search';\r\nimport SearchByAuthor from './searchByAuthor';\r\nimport SearchByPublisher from './searchByPublisher';\r\n\r\nconst Home = () => {\r\n\r\n    const [booksByArrival, setBooksByArrival] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadBooksByArrival = () => {\r\n        getBooks('createdAt').then(data => {\r\n            if(data.error){\r\n                setError(data.error);\r\n            } \r\n            else{\r\n                setBooksByArrival(data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n     loadBooksByArrival();\r\n    }, []);\r\n\r\n    return (\r\n    <Layout title=\"Have a Great Day\" description=\"Library Management System\" className=\"container-fluid\">\r\n \r\n    <Search />\r\n    <SearchByAuthor />\r\n    <SearchByPublisher />\r\n\r\n\r\n     <h2 className=\"mb-4\">New Arrivals</h2>\r\n     <div className=\"row\">  \r\n        {booksByArrival.map((book, i) => (\r\n           <div key={i} className=\"col-4 mb-3\"> \r\n             <Card book={book} />\r\n           </div>\r\n        ))}\r\n     </div>\r\n    \r\n    </Layout>\r\n);\r\n};\r\n\r\nexport default Home;","D:\\React Js\\library management system\\client\\src\\core\\Layout.js",[],"D:\\React Js\\library management system\\client\\src\\core\\Card.js",["141","142","143"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport {isAuthenticated} from '../auth';\r\nimport { createInventory, inventoryCheck } from './apiCore';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nconst Card = ({ \r\n    book,\r\n    showViewProductButton = true,\r\n    showAddToCartButton = false,\r\n    showAvailabilityButton = true,\r\n}) => {\r\n    const [data, setData] = useState({\r\n        results: [],\r\n        searched: false,\r\n    });\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [message, setMessage] = useState(false);\r\n\r\n\r\n    const { results, searched } = data;\r\n\r\n    useEffect(() => {\r\n        isAuthenticated();\r\n    }, []);\r\n\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const submit = () => {\r\n        confirmAlert({\r\n          title: 'Confirm to Get Book',\r\n          message: 'Are you sure.',\r\n          buttons: [\r\n            {\r\n              label: 'Yes',\r\n              onClick: () => addToInventory()\r\n            },\r\n            {\r\n              label: 'No',\r\n              onClick: () => alert('Click No')\r\n            }\r\n          ]\r\n        });\r\n    };\r\n\r\n    const showViewButton = (showViewProductButton) => {\r\n        return(\r\n            showViewProductButton && (\r\n                <Link to={`/book/${book._id}`}>\r\n                <button className=\"btn btn-outline-primary mr-2 mt-2 mb-2\">\r\n                    View Book\r\n                </button>\r\n                </Link>\r\n            )\r\n        );\r\n    }\r\n\r\n\r\n    const addToBag = () => {\r\n           setRedirect(true);\r\n    }\r\n\r\n\r\n\r\n    const shouldRedirect = (redirect) => {\r\n        if(redirect){\r\n            return <Redirect to=\"/user/dashboard\" />\r\n        }\r\n    }\r\n\r\n\r\n    const showMessage = (searched) => {\r\n        if(searched){\r\n            if(results.length > 0){\r\n                return <h3 className=\"text-success\">\r\n                Not Available.\r\n            </h3>\r\n            }\r\n            else{\r\n                showAddToCartButton = true;\r\n                showAvailabilityButton = false;\r\n                return (<h3 className=\"text-success\">\r\n                Available.\r\n            </h3>\r\n            ) \r\n            }\r\n        }\r\n    }\r\n\r\n    const inventoryCheckByBook = () => {\r\n        inventoryCheck({bookId: book._id})\r\n        .then(response => {\r\n            if(response.error){\r\n                console.log(response.error);\r\n            }\r\n            else{\r\n                setData({...data, results: response, searched: true});\r\n                // console.log(\"Check your response length\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const addToInventory = () => {\r\n\r\n        const createInventoryData = {\r\n            name: user.name,\r\n            bookName: book.bookName,\r\n            userId: user._id,\r\n            bookId: book._id,\r\n            status: \"picked\"\r\n        };\r\n\r\n            createInventory(user._id, token, createInventoryData)\r\n                .then(response => {\r\n                    if(response){\r\n                        // return <Redirect to=\"/user/dashboard\" />\r\n                        addToBag();\r\n                    }\r\n                    \r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                }) \r\n    }\r\n\r\n    const getBook = () => {\r\n        inventoryCheckByBook();\r\n    }\r\n\r\n    function showAddToBag(showAddToCartButton) {\r\n        return showAddToCartButton ? \r\n        (\r\n            isAuthenticated() && user.role === 0 ? (\r\n            <button onClick={addToInventory} className=\"btn btn-outline-warning mt-2 mb-2\">\r\n                       Get Book\r\n            </button>\r\n            ) \r\n            :\r\n            <Link to=\"/signin\">\r\n            <button className=\"btn btn-outline-warning mt-2 mb-2\">\r\n                Signin to Get Book\r\n            </button>\r\n            </Link>\r\n        )  :\r\n        (\"\");\r\n    }\r\n\r\n    const checkAvailabilityButton = (showAvailabilityButton) => {\r\n        return showAvailabilityButton ? (\r\n            <button onClick={getBook}\r\n            className=\"btn btn-outline-warning mt-2 mb-2\">\r\n                       Check Availability\r\n            </button>\r\n            \r\n        ) : (\"\");\r\n    }\r\n\r\n\r\n    return (   \r\n            <div className=\"card\">\r\n              <div className=\"card-header name\">{book.bookName}</div>\r\n              <div className=\"card-body\">\r\n               {shouldRedirect(redirect)}   \r\n               <ShowImage item={book} url=\"book\" />\r\n               <p className=\"lead mt-2\">{book.description.substring(0,50)}</p>\r\n               <p className=\"black-10\">Author: {book.author}</p>\r\n               <p className=\"black-10\">Publisher: {book.publisher}</p>\r\n               <p className=\"black-9\">\r\n                Category: {book.category && book.category.name}\r\n               </p>\r\n               <p className=\"black-8\">\r\n                 Added on {moment(book.createdAt).fromNow()}\r\n               </p>\r\n               \r\n               {showMessage(searched)}\r\n\r\n               {showViewButton(showViewProductButton)}\r\n\r\n               {checkAvailabilityButton(showAvailabilityButton)}\r\n               \r\n               {showAddToBag(showAddToCartButton)}\r\n\r\n            \r\n              </div>\r\n              </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Card;","D:\\React Js\\library management system\\client\\src\\core\\apiCore.js",[],"D:\\React Js\\library management system\\client\\src\\core\\Search.js",[],"D:\\React Js\\library management system\\client\\src\\Config.js",[],"D:\\React Js\\library management system\\client\\src\\core\\Menu.js",[],"D:\\React Js\\library management system\\client\\src\\core\\ShowImage.js",[],["144","145"],"D:\\React Js\\library management system\\client\\src\\auth\\index.js",[],"D:\\React Js\\library management system\\client\\src\\user\\Signup.js",[],"D:\\React Js\\library management system\\client\\src\\user\\Signin.js",[],"D:\\React Js\\library management system\\client\\src\\auth\\PrivateRoute.js",["146"],"import React, { Component } from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport { isAuthenticated } from './index';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route \r\n     {...rest}\r\n     render={props =>\r\n         isAuthenticated() ? (\r\n             <Component {...props} />\r\n         ) : (\r\n             <Redirect \r\n               to={{\r\n                   pathname: \"/signin\",\r\n                   state: { from: props.location }\r\n               }}\r\n             />\r\n         )\r\n        }\r\n    />\r\n)\r\n\r\nexport default PrivateRoute;","D:\\React Js\\library management system\\client\\src\\auth\\AdminRoute.js",["147"],"import React, { Component } from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport { isAuthenticated } from './index';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route \r\n     {...rest}\r\n     render={props =>\r\n         isAuthenticated() \r\n         && isAuthenticated().user.role === 1 ? (\r\n             <Component {...props} />\r\n         ) : (\r\n             <Redirect \r\n               to={{\r\n                   pathname: \"/signin\",\r\n                   state: { from: props.location }\r\n               }}\r\n             />\r\n         )\r\n        }\r\n    />\r\n)\r\n\r\nexport default AdminRoute;","D:\\React Js\\library management system\\client\\src\\user\\UserDashboard.js",["148","149"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUserHistory } from './apiUser';\r\nimport moment from 'moment';\r\n\r\nconst Dashboard = () => {\r\n\r\n  const[history, setHistory] = useState([]);\r\n   \r\n  const {user: {_id, name, email, role}} = isAuthenticated();\r\n\r\n  const token = isAuthenticated().token;\r\n\r\n  const init = (userId) => {\r\n    getUserHistory({userId}).then(data => {\r\n      if(data.error){\r\n        console.log(data.error);\r\n      }\r\n      else{\r\n        setHistory(data);\r\n        console.log(data);\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    init(_id);\r\n  }, []);\r\n\r\n  const userLinks = () => {\r\n       return(\r\n           <div className=\"card\">\r\n             <h4 className=\"card-header\">User Links</h4>\r\n             <ul className=\"list-group\">\r\n                   <li className=\"list-group-item\">\r\n                       <Link className=\"nav-Link\" to={`/profile/${_id}`}>Update Profile</Link>\r\n                   </li>\r\n                </ul>\r\n           </div>\r\n       );\r\n  }\r\n\r\n  const userInfo = () => {\r\n       return (\r\n         <div className=\"card mb-5\">\r\n          <h3 className=\"card-header\">User Information</h3>\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">{name}</li>\r\n            <li className=\"list-group-item\">{email}</li>\r\n            <li className=\"list-group-item\">\r\n               {role === 1 ? 'Admin' : 'Registered User'}\r\n            </li>\r\n          </ul>\r\n         </div>\r\n       );\r\n  }\r\n\r\n\r\n  const inventoryHistory = (history) => {\r\n    return (\r\n        <div className=\"card mb-5\">\r\n            <h3 className=\"card-header\">Your Book History</h3>\r\n            <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                    {history.map((h, i) => {\r\n                        return (\r\n                            <div key={i}>\r\n                                \r\n                                <h6>Book Name: {h.bookName}</h6>\r\n                                <h6>status: {h.status}</h6>\r\n                                <h6>\r\n                                  Picked date:{\" \"}\r\n                                {moment(h.createdAt).fromNow()}\r\n                                </h6>\r\n                                <hr />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\n  return (\r\n        <Layout title=\"Dashboard\" description={`G'day ${name}!`} className=\"container-fluid\">\r\n        \r\n          <div className=\"row\">\r\n            <div className=\"col-3\">\r\n               {userLinks()}\r\n            </div>\r\n            <div className=\"col-9\">\r\n               {userInfo()}\r\n               {inventoryHistory(history)}\r\n            </div> \r\n          </div>\r\n        </Layout>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","D:\\React Js\\library management system\\client\\src\\user\\Profile.js",["150","151","152"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { read, update, updateUser } from './apiUser';\r\n\r\nconst Profile = ({match}) => {\r\n\r\n   const [values, setValues] = useState({\r\n       name: '',\r\n       email: '',\r\n       password: '',\r\n       error: false,\r\n       success: false\r\n   });\r\n\r\n   const {token} = isAuthenticated();\r\n\r\n   const {name, email, password, error, success} = values;\r\n\r\n   const init = (userId) => {\r\n    //  console.log(userId);\r\n    read(userId, token).then(data => {\r\n        if(data.error){\r\n            setValues({...values, error: true})\r\n        }\r\n        else{\r\n            setValues({\r\n               ...values,\r\n               name: data.name,\r\n               email: data.email\r\n            })\r\n        }\r\n    })\r\n   }\r\n\r\n   useEffect(() => {\r\n      init(match.params.userId);\r\n   }, []);\r\n\r\n   const handleChange = name => e => {\r\n     setValues({...values, error: false, [name]: e.target.value })\r\n   }\r\n\r\n   const redirectUser = (success) => {\r\n       if(success){\r\n          return <Redirect to=\"/\" />\r\n       }\r\n   }\r\n\r\n   const clickSubmit = (e) => {\r\n     e.preventDefault();\r\n     update(match.params.userId, token, {name, email, password})\r\n     .then(data => {\r\n         if(data.error){\r\n             console.log(data.error);\r\n         }\r\n         else{\r\n             updateUser(data, () => {\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    email: data.email,\r\n                    success: true\r\n                })\r\n             }) \r\n         } \r\n\r\n     })\r\n   }\r\n\r\n   const profileUpdate = (name, email, password) => (\r\n       <form>\r\n           <div className=\"form-group\">\r\n               <label className=\"text-muted\">Name</label>\r\n               <input \r\n                 type=\"text\"\r\n                 onChange={handleChange('name')}\r\n                 className=\"form-control\"\r\n                 value={name}\r\n               />\r\n           </div>\r\n           <div className=\"form-group\">\r\n               <label className=\"text-muted\">Email</label>\r\n               <input \r\n                 type=\"email\"\r\n                 onChange={handleChange('email')}\r\n                 className=\"form-control\"\r\n                 value={email}\r\n               />\r\n           </div>\r\n           <div className=\"form-group\">\r\n               <label className=\"text-muted\">Password</label>\r\n               <input \r\n                 type=\"password\"\r\n                 onChange={handleChange('password')}\r\n                 className=\"form-control\"\r\n                 value={password}\r\n               />\r\n           </div>\r\n           <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n               Submit\r\n           </button>\r\n       </form>\r\n   );\r\n\r\n   return (\r\n    <Layout \r\n     title=\"Profile\" \r\n     description=\"Update your profile\" \r\n     className=\"container-fluid\">\r\n     \r\n     <h2 className=\"mb-4\">Profile Update</h2>\r\n     {/* {JSON.stringify(values)} */}\r\n     {profileUpdate(name, email, password)}\r\n     {redirectUser(success)}\r\n    </Layout>\r\n   )\r\n};\r\n\r\nexport default Profile;","D:\\React Js\\library management system\\client\\src\\user\\AdminDashboard.js",["153"],"import React from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdminDashboard = () => {\r\n\r\n   const {user: {_id, name, email, role}} = isAuthenticated();\r\n\r\n   const adminLinks = () => {\r\n       return(\r\n           <div className=\"card\">\r\n             <h4 className=\"card-header\">Admin Links</h4>\r\n             <ul className=\"list-group\">\r\n                   <li className=\"list-group-item\">\r\n                    <Link className=\"nav-link\" to=\"/create/category\">\r\n                      Create Category\r\n                    </Link>\r\n                   </li>\r\n                   <li className=\"list-group-item\">\r\n                    <Link className=\"nav-link\" to=\"/create/book\">\r\n                        Create Book\r\n                    </Link>\r\n                   </li>\r\n                   <li className=\"list-group-item\">\r\n                    <Link className=\"nav-link\" to=\"/admin/orders\">\r\n                        View Logs\r\n                    </Link>\r\n                   </li>\r\n                   <li className=\"list-group-item\">\r\n                    <Link className=\"nav-link\" to=\"/admin/books\">\r\n                        Manage Books\r\n                    </Link>\r\n                   </li>\r\n                </ul>\r\n           </div>\r\n       );\r\n   }\r\n\r\n   const adminInfo = () => {\r\n       return (\r\n         <div className=\"card mb-5\">\r\n          <h3 className=\"card-header\">Admin Information</h3>\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">{name}</li>\r\n            <li className=\"list-group-item\">{email}</li>\r\n            <li className=\"list-group-item\">\r\n               {role === 1 ? 'Admin' : 'Registered User'}\r\n            </li>\r\n          </ul>\r\n         </div>\r\n       );\r\n   }\r\n\r\n    return (\r\n        <Layout title=\"Dashboard\" description={`G'day ${name}!`} className=\"container-fluid\">\r\n        \r\n          <div className=\"row\">\r\n            <div className=\"col-3\">\r\n               {adminLinks()}\r\n            </div>\r\n            <div className=\"col-9\">\r\n               {adminInfo()}\r\n            </div> \r\n          </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard;","D:\\React Js\\library management system\\client\\src\\admin\\AddCategory.js",[],"D:\\React Js\\library management system\\client\\src\\user\\apiUser.js",[],"D:\\React Js\\library management system\\client\\src\\admin\\apiAdmin.js",[],"D:\\React Js\\library management system\\client\\src\\admin\\AddBook.js",["154","155","156","157"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { createBook, getCategories } from './apiAdmin';\r\n\r\nconst AddBook = () => {\r\n\r\n   const [values, setValues] = useState({\r\n       bookName: '',\r\n       description: '',\r\n       categories: [],\r\n       category: '',\r\n       author: '',\r\n       publisher: '',\r\n       photo: '',\r\n       loading: false,\r\n       error: '',\r\n       createdBook: '',\r\n       redirectToProfile: false,\r\n       formData: ''\r\n   })\r\n\r\n   const {\r\n      bookName,\r\n      description,\r\n      categories,\r\n      category,\r\n      author,\r\n      publisher,\r\n      loading,\r\n      error,\r\n      createdBook,\r\n      redirectToProfile,\r\n      formData\r\n    } = values;\r\n\r\n    // Load Categories and set form data\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if(data.error){\r\n                setValues({...values, error:data.error})\r\n            } else{\r\n                setValues({\r\n                ...values, \r\n                categories: data,\r\n                formData: new FormData()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const {user, token} = isAuthenticated();\r\n\r\n    useEffect(() => {\r\n        init();\r\n      }, []);\r\n\r\n    const handleChange = name => event => { //higher order function(Function is retuning another function)\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({...values, [name]: value });\r\n    }\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({...values, error: \"\",loading: true });\r\n\r\n        createBook(user._id, token, formData)\r\n        .then(data => {\r\n            if(data.error){\r\n                setValues({...values, error: data.error});\r\n            }\r\n            else{\r\n                setValues({\r\n                    ...values,\r\n                    bookName: \"\",\r\n                    description: \"\",\r\n                    author: \"\",\r\n                    publisher: \"\",\r\n                    photo: \"\",\r\n                    loading: false,\r\n                    createdBook: data.bookName\r\n                });\r\n            }\r\n        });\r\n    }\r\n     \r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n         <h4>Post Photo</h4>\r\n         <div className=\"form-group\">\r\n             <label className=\"btn btn-secondary\">\r\n             <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n             </label>\r\n         </div>\r\n\r\n         <div className=\"form-group\">\r\n            <label className=\"text-muted\">Name</label>\r\n            <input onChange={handleChange('bookName')} type=\"text\" className=\"form-control\" value={bookName} />   \r\n         </div>\r\n\r\n         <div className=\"form-group\">\r\n            <label className=\"text-muted\">Description</label>\r\n            <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />   \r\n         </div>\r\n\r\n         <div className=\"form-group\">\r\n            <label className=\"text-muted\">Category</label>\r\n            <select onChange={handleChange('category')} className=\"form-control\">\r\n                <option>Please select</option>\r\n                {categories && categories.map((c, i) => (\r\n                  <option key={i} value={c._id}>\r\n                      {c.name}\r\n                  </option>  \r\n                )) }\r\n            </select>       \r\n         </div>\r\n\r\n         <div className=\"form-group\">\r\n            <label className=\"text-muted\">author</label>\r\n            <input onChange={handleChange('author')} type=\"text\" className=\"form-control\" value={author} />   \r\n         </div>\r\n\r\n         <div className=\"form-group\">\r\n            <label className=\"text-muted\">publisher</label>\r\n            <input onChange={handleChange('publisher')} type=\"text\" className=\"form-control\" value={publisher} />   \r\n         </div>\r\n\r\n         <button className=\"btn btn-outline-primary\">Create Book</button>\r\n\r\n        </form>\r\n    );\r\n\r\n   const showError = () => (\r\n     <div className=\"alert alert-danger\" style={{display: error ? '' : 'none'}}>\r\n         {error}\r\n     </div>\r\n   );\r\n\r\n   const showSuccess = () => (\r\n    <div className=\"alert alert-info\" style={{display: createdBook ? '' : 'none'}}>\r\n        <h2>{`${createdBook}`} is created!</h2>\r\n    </div>\r\n  );\r\n\r\n  const showLoading = () => (\r\n    loading && (\r\n        <div className=\"alert alert-success\">\r\n            <h2>Loading...</h2>\r\n        </div>\r\n    )\r\n  );\r\n\r\n   return(\r\n    <Layout \r\n    title=\"Add a new product\" \r\n    description={`G'day ${user.name}, ready to add a new product?`}\r\n    >\r\n\r\n    <div className=\"row\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n         {showLoading()}\r\n         {showSuccess()}\r\n         {showError()}\r\n         {newPostForm()}\r\n        </div>\r\n    </div>\r\n\r\n    </Layout>\r\n);\r\n\r\n}\r\n\r\nexport default AddBook;","D:\\React Js\\library management system\\client\\src\\admin\\UpdateBook.js",["158","159","160"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getBook, getCategories, updateBook } from './apiAdmin';\r\n\r\nconst UpdateBook = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        bookName: '',\r\n        description: '',\r\n        categories: [],\r\n        category: '',\r\n        author: '',\r\n        publisher: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: false,\r\n        createdBook: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        bookName,\r\n        description,\r\n        // categories,\r\n        category,\r\n        author,\r\n        publisher,\r\n        loading,\r\n        error,\r\n        createdBook,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    const init = bookId => {\r\n        getBook(bookId).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // console.log(data);\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    bookName: data.bookName,\r\n                    description: data.description,\r\n                    category: data.category._id,\r\n                    author: data.author,\r\n                    publisher: data.publisher,\r\n                    formData: new FormData()\r\n                });\r\n                // load categories\r\n                initCategories();\r\n            }\r\n        });\r\n    };\r\n\r\n    // load categories and set form data\r\n    const initCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.bookId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        updateBook(match.params.bookId, user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    bookName: '',\r\n                    description: '',\r\n                    author: '',\r\n                    publisher: '',\r\n                    photo: '',\r\n                    loading: false,\r\n                    error: false,\r\n                    redirectToProfile: true,\r\n                    createdBook: data.booName\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Book Name</label>\r\n                <input onChange={handleChange('bookName')} type=\"text\" className=\"form-control\" value={bookName} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">author</label>\r\n                <input onChange={handleChange('author')} type=\"text\" className=\"form-control\" value={author} />\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">publisher</label>\r\n                <input onChange={handleChange('publisher')} type=\"text\" className=\"form-control\" value={publisher} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Update Book</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdBook ? '' : 'none' }}>\r\n            <h2>{`${createdBook}`} is updated!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            if (!error) {\r\n                return <Redirect to=\"/\" />;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout title=\"Update Book\" description={`G'day ${user.name}, ready to update a book?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                    {redirectUser()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateBook;\r\n","D:\\React Js\\library management system\\client\\src\\admin\\ManageBooks.js",[],"D:\\React Js\\library management system\\client\\src\\core\\Book.js",["161"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport { read, listRelated } from './apiCore'; // function\r\nimport  Card  from './Card'; // component function, so dont't use curly braces here\r\n\r\nconst Book = props => {\r\n\r\n    const [book, setBook] = useState({});\r\n    const [relatedbook, setRelatedBook] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadSingleBook = bookId => {\r\n        read(bookId).then(data => {\r\n           if(data.error) {\r\n               setError(data.error);\r\n           }\r\n           else{\r\n               setBook(data);\r\n               // then fetch related products\r\n               listRelated(data._id)\r\n               .then(data => {\r\n                   if(data.error){\r\n                       setError(data.error);\r\n                   }\r\n                   else{\r\n                     setRelatedBook(data);\r\n                   }\r\n               })\r\n           }\r\n       })\r\n    }\r\n\r\n    useEffect(() => {\r\n     const bookId = props.match.params.bookId;\r\n     loadSingleBook(bookId);\r\n    }, [props]);\r\n\r\n    return(\r\n        <Layout\r\n         title={book && book.bookName}\r\n         description={\r\n            book &&\r\n            book.description &&\r\n            book.description.substring(0,100)}\r\n         className=\"container-fluid\"\r\n        >\r\n\r\n    \r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n          {\r\n            book &&\r\n            book.description && (\r\n             <Card book={book} showViewProductButton={false} />\r\n            ) \r\n          }\r\n          </div>\r\n          \r\n          <div className=\"col-4\">\r\n           <h4>Related Books</h4>\r\n           {relatedbook.map((b, i) => (\r\n               <div className=\"mb-3\">\r\n                  <Card key={i} book={b} />\r\n               </div>    \r\n           ))}\r\n          </div>\r\n        </div>  \r\n\r\n        </Layout>\r\n    );\r\n\r\n}\r\n\r\nexport default Book;","D:\\React Js\\library management system\\client\\src\\core\\searchByAuthor.js",["162"],"import React, {useState, useEffect} from 'react';\r\nimport { listByAuthor } from './apiCore'; // function\r\nimport  Card  from './Card'; // component function, so dont't use curly braces here\r\n\r\nconst SearchByAuthor = () => {\r\n\r\n    const [data, setData] = useState({\r\n        search: \"\",\r\n        results: [],\r\n        searched: false\r\n    });\r\n\r\n    const { search, results, searched } = data;\r\n\r\n\r\n    const searchData = () => {\r\n        // console.log(search, category); \r\n        listByAuthor({search: search || undefined})\r\n        .then(response => {\r\n           if(response.error){\r\n               console.log(response.error);\r\n           }\r\n           else{\r\n               setData({...data, results: response, searched: true});\r\n           }\r\n        })\r\n    }\r\n\r\n    const searchSubmit = (e) => {\r\n        e.preventDefault();\r\n        searchData();\r\n    }\r\n\r\n    const handleChange = name => event => {\r\n       setData({...data, [name]: event.target.value, searched: false});\r\n    }\r\n\r\n    const searchMessage = (searched, results) => {\r\n        if(searched && results.length > 0){\r\n            return `Found ${results.length} books`;\r\n        }\r\n        if(searched && results.length < 1){\r\n            return `No Books found`;\r\n        }\r\n    }\r\n\r\n    const searchedBooks = (results = []) => {\r\n        return(\r\n          <div>\r\n            <h2 className=\"mt-4 mb-4\">\r\n                {searchMessage(searched, results)}\r\n            </h2>  \r\n            <div className=\"row\">\r\n           {results.map((book, i) => (\r\n               <Card key={i} book={book} />\r\n           ))}\r\n           </div>\r\n          </div>\r\n        );\r\n    }\r\n\r\n    const searchForm = () => {\r\n       return(\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n\r\n                <input type=\"search\"\r\n                 className=\"form-control\"\r\n                 onChange={handleChange(\"search\")}\r\n                 placeholder=\"Search by Author\"\r\n                />\r\n                </div>\r\n\r\n                <div className=\"btn input-group-append\" style={{border: 'none'}}>\r\n                  <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n          \r\n\r\n        </form>\r\n       ) \r\n    }\r\n  \r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"container mb-2\">\r\n            {searchForm()}\r\n        </div>\r\n        <div className=\"container-fluid mb-2\">\r\n            {searchedBooks(results)}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SearchByAuthor;","D:\\React Js\\library management system\\client\\src\\core\\searchByPublisher.js",["163"],"import React, {useState, useEffect} from 'react';\r\nimport { listByPublisher } from './apiCore'; // function\r\nimport  Card  from './Card'; // component function, so dont't use curly braces here\r\n\r\nconst SearchByPublisher = () => {\r\n\r\n    const [data, setData] = useState({\r\n        search: \"\",\r\n        results: [],\r\n        searched: false\r\n    });\r\n\r\n    const { search, results, searched } = data;\r\n\r\n    const searchData = () => {\r\n        // console.log(search, category); \r\n        listByPublisher({search: search || undefined})\r\n        .then(response => {\r\n           if(response.error){\r\n               console.log(response.error);\r\n           }\r\n           else{\r\n               setData({...data, results: response, searched: true});\r\n           }\r\n        })\r\n    }\r\n\r\n    const searchSubmit = (e) => {\r\n        e.preventDefault();\r\n        searchData();\r\n    }\r\n\r\n    const handleChange = name => event => {\r\n       setData({...data, [name]: event.target.value, searched: false});\r\n    }\r\n\r\n    const searchMessage = (searched, results) => {\r\n        if(searched && results.length > 0){\r\n            return `Found ${results.length} books`;\r\n        }\r\n        if(searched && results.length < 1){\r\n            return `No Books found`;\r\n        }\r\n    }\r\n\r\n    const searchedBooks = (results = []) => {\r\n        return(\r\n          <div>\r\n            <h2 className=\"mt-4 mb-4\">\r\n                {searchMessage(searched, results)}\r\n            </h2>  \r\n            <div className=\"row\">\r\n           {results.map((book, i) => (\r\n               <Card key={i} book={book} />\r\n           ))}\r\n           </div>\r\n          </div>\r\n        );\r\n    }\r\n\r\n    const searchForm = () => {\r\n       return(\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n\r\n                <input type=\"search\"\r\n                 className=\"form-control\"\r\n                 onChange={handleChange(\"search\")}\r\n                 placeholder=\"Search by Publihser\"\r\n                />\r\n                </div>\r\n\r\n                <div className=\"btn input-group-append\" style={{border: 'none'}}>\r\n                  <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n          \r\n\r\n        </form>\r\n       ) \r\n    }\r\n  \r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"container mb-2\">\r\n            {searchForm()}\r\n        </div>\r\n        <div className=\"container-fluid mb-2\">\r\n            {searchedBooks(results)}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SearchByPublisher;","D:\\React Js\\library management system\\client\\src\\admin\\Inventory.js",["164","165"],"import React ,{ useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { listItems, deleteInventoryItem } from './apiAdmin';\r\nimport moment from 'moment';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst Inventory = () => {\r\n    \r\n    const [items, setItems] = useState([]);\r\n\r\n    const {user, token} = isAuthenticated();\r\n\r\n    const loadItems = () => {\r\n       listItems(user._id, token).then(data => {\r\n           if(data.error){\r\n               console.log(data.error);\r\n           }\r\n           else{\r\n            setItems(data);\r\n           }\r\n       })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadItems();\r\n    }, []);\r\n\r\n    const showOrdersLength = () => {\r\n        if(items.length > 0){\r\n            return (\r\n                <h1 className=\"text-danger display-2\">Total Books: {items.length}</h1>\r\n            );\r\n        } \r\n        else{\r\n            return <h1 className=\"text-danger\">No Items</h1>\r\n        }\r\n    };\r\n\r\n    const destroy = (id) => {\r\n        deleteInventoryItem(id, user._id, token).then(data => {\r\n            if(data.error){\r\n                console.log(data.error);\r\n            }\r\n            else{\r\n                loadItems();\r\n            }\r\n        })\r\n    };\r\n\r\n    return(\r\n        <Layout \r\n        title=\"Issued Books\" \r\n        description={`G'day ${user.name}, you can manage all the issued books here`}\r\n        >\r\n \r\n        <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n                {showOrdersLength()}\r\n                \r\n                {items.map((i ,oIndex) => {\r\n                    return (\r\n                       <div\r\n                          className=\"mt-3\"\r\n                          key={oIndex}\r\n                          style={{ borderBottom: \"5px solid indigo\" }}>\r\n\r\n<Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>Item ID</th>\r\n      <th>Person Name</th>\r\n      {/* <th>Person ID</th> */}\r\n      <th>Book Name</th>\r\n      {/* <th>Book ID</th> */}\r\n      <th>Picked On</th>\r\n      <th>Status</th>\r\n      <th>Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>{i._id}</td>\r\n      <td>{i.name}</td>\r\n      {/* <td>{i.userId}</td> */}\r\n      <td>{i.bookName}</td>\r\n      {/* <td>{i.bookId}</td> */}\r\n      <td>{moment(i.createdAt).fromNow()}</td>\r\n      <td>{i.status}</td>\r\n      <td><button onClick={() => destroy(i._id)}\r\n           className=\"btn btn-outline-danger mt-1 mb-1\">\r\n              Delete\r\n         </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</Table>    \r\n                          {/* <h2 className=\"mb-5\">\r\n                           <span className=\"bg-primary\">\r\n                             Item ID: {i._id}\r\n                           </span> \r\n                          </h2>\r\n\r\n                          <ul className=\"list-group mb-2\">\r\n                           \r\n                           <li className=\"list-group-item\">\r\n                               name: {i.name}\r\n                           </li>\r\n                           <li className=\"list-group-item\">\r\n                               User ID: {i.userId}\r\n                           </li>\r\n                           <li className=\"list-group-item\">\r\n                               Book Name: {i.bookName}\r\n                           </li> \r\n                           <li className=\"list-group-item\">\r\n                               Book ID: {i.bookId}\r\n                           </li> \r\n                           <li className=\"list-group-item\">\r\n                               Picked on: {moment(i.createdAt).fromNow()}\r\n                           </li> \r\n                           <li className=\"list-group-item\">\r\n                               status: {i.status}\r\n                           </li>\r\n\r\n                           <button onClick={() => destroy(i._id)}\r\n                            className=\"btn btn-outline-danger mt-2 mb-2\">\r\n                              Delete\r\n                           </button>\r\n                                 \r\n\r\n                          </ul> */}\r\n                          \r\n\r\n                        </div>           \r\n                    );\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n \r\n        </Layout>\r\n    );\r\n\r\n}\r\n\r\nexport default Inventory;",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":12,"column":12,"nodeType":"172","messageId":"173","endLine":12,"endColumn":17},{"ruleId":"170","severity":1,"message":"174","line":21,"column":12,"nodeType":"172","messageId":"173","endLine":21,"endColumn":19},{"ruleId":"170","severity":1,"message":"175","line":21,"column":21,"nodeType":"172","messageId":"173","endLine":21,"endColumn":31},{"ruleId":"170","severity":1,"message":"176","line":33,"column":11,"nodeType":"172","messageId":"173","endLine":33,"endColumn":17},{"ruleId":"166","replacedBy":"177"},{"ruleId":"168","replacedBy":"178"},{"ruleId":"170","severity":1,"message":"179","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"179","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"180","line":14,"column":9,"nodeType":"172","messageId":"173","endLine":14,"endColumn":14},{"ruleId":"181","severity":1,"message":"182","line":30,"column":6,"nodeType":"183","endLine":30,"endColumn":8,"suggestions":"184"},{"ruleId":"170","severity":1,"message":"185","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":19,"column":34,"nodeType":"172","messageId":"173","endLine":19,"endColumn":39},{"ruleId":"181","severity":1,"message":"186","line":39,"column":7,"nodeType":"183","endLine":39,"endColumn":9,"suggestions":"187"},{"ruleId":"170","severity":1,"message":"188","line":8,"column":18,"nodeType":"172","messageId":"173","endLine":8,"endColumn":21},{"ruleId":"170","severity":1,"message":"185","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"189","line":28,"column":7,"nodeType":"172","messageId":"173","endLine":28,"endColumn":15},{"ruleId":"170","severity":1,"message":"190","line":34,"column":7,"nodeType":"172","messageId":"173","endLine":34,"endColumn":24},{"ruleId":"181","severity":1,"message":"191","line":57,"column":10,"nodeType":"183","endLine":57,"endColumn":12,"suggestions":"192"},{"ruleId":"170","severity":1,"message":"185","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"189","line":29,"column":9,"nodeType":"172","messageId":"173","endLine":29,"endColumn":17},{"ruleId":"181","severity":1,"message":"193","line":74,"column":8,"nodeType":"183","endLine":74,"endColumn":10,"suggestions":"194"},{"ruleId":"170","severity":1,"message":"171","line":10,"column":12,"nodeType":"172","messageId":"173","endLine":10,"endColumn":17},{"ruleId":"170","severity":1,"message":"195","line":1,"column":26,"nodeType":"172","messageId":"173","endLine":1,"endColumn":35},{"ruleId":"170","severity":1,"message":"195","line":1,"column":26,"nodeType":"172","messageId":"173","endLine":1,"endColumn":35},{"ruleId":"170","severity":1,"message":"185","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"181","severity":1,"message":"196","line":28,"column":8,"nodeType":"183","endLine":28,"endColumn":10,"suggestions":"197"},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'submit' is assigned a value but never used.",["198"],["199"],"'Component' is defined but never used.","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: '_id'. Either include it or remove the dependency array.","ArrayExpression",["200"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["201"],"'_id' is assigned a value but never used.","'category' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["202"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.bookId'. Either include them or remove the dependency array.",["203"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'loadItems'. Either include it or remove the dependency array.",["204"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [_id]",{"range":"215","text":"216"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"217","text":"218"},"Update the dependencies array to be: [init]",{"range":"219","text":"220"},"Update the dependencies array to be: [init, match.params.bookId]",{"range":"221","text":"222"},"Update the dependencies array to be: [loadItems]",{"range":"223","text":"224"},[722,724],"[_id]",[967,969],"[init, match.params.userId]",[1324,1326],"[init]",[2111,2113],"[init, match.params.bookId]",[738,740],"[loadItems]"]